name: release xcframework

on:
   workflow_dispatch:
    inputs:
      version:
        description: '输入版本号'
        required: true
        default: 'v1.3.9'

jobs:
  release:
    runs-on: macos-latest
    steps:
      - name: Select Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable
          
      - name: Get Version
        run: |
          echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV

      - name: Checkout Current
        uses: actions/checkout@v4
        with:
          path: 'current'
   
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: 'Tencent/MMKV'
          ref: ${{ env.VERSION }}
          path: 'MMKV'
          
      - name: Build Binaries
        run: |
          cd MMKV
          rm -rf archives
          xcodebuild archive \
          -workspace MMKV.xcworkspace \
          -scheme MMKV \
          -configuration Release \
          -destination "generic/platform=iOS" \
          -archivePath "archives/MMKV-iOS" \
          SKIP_INSTALL=NO \
          BUILD_LIBRARY_FOR_DISTRIBUTION=YES
          
          xcodebuild archive \
          -workspace MMKV.xcworkspace \
          -scheme MMKV \
          -configuration Release \
          -destination "generic/platform=iOS Simulator" \
          -archivePath "archives/MMKV-iOS-Simulator" \
          SKIP_INSTALL=NO \
          BUILD_LIBRARY_FOR_DISTRIBUTION=YES

          xcodebuild archive \
          -workspace MMKV.xcworkspace \
          -scheme MMKV \
          -configuration Release \
          -destination "generic/platform=tvOS" \
          -archivePath "archives/MMKV-tvOS" \
          SKIP_INSTALL=NO \
          BUILD_LIBRARY_FOR_DISTRIBUTION=YES
          
          xcodebuild archive \
          -workspace MMKV.xcworkspace \
          -scheme MMKV \
          -configuration Release \
          -destination "generic/platform=macOS" \
          -archivePath "archives/MMKV-macOS" \
          SKIP_INSTALL=NO \
          BUILD_LIBRARY_FOR_DISTRIBUTION=YES
          
          xcodebuild \
          -create-xcframework \
          -archive archives/MMKV-iOS.xcarchive -framework MMKV.framework \
          -archive archives/MMKV-iOS-Simulator.xcarchive -framework MMKV.framework \
          -archive archives/MMKV-tvOS.xcarchive -framework MMKV.framework \
          -archive archives/MMKV-macOS.xcarchive -framework MMKV.framework \
          -output archives/MMKV.xcframework
          
          zip -r -X "archives/MMKV.xcframework.zip" "archives/MMKV.xcframework"
          
      - name: Compute Checksum
        run: |
          echo "CHECKSUM=$(swift package compute-checksum ./MMKV/archives/MMKV.xcframework.zip)" >> $GITHUB_ENV

      - name: Update Package.swift
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          DOWNLOAD_URL='https://github.com/devjia/mmkv-spm/releases/download/${{ env.VERSION }}/MMKV.xcframework.zip'
          CHECKSUM=${{ env.CHECKSUM }}
          cd current
          sed -i '' "s#\(url: \".*\"\),#url: \"${DOWNLOAD_URL}\",#" Package.swift
          sed -i '' "s#\(checksum: \".*\)#checksum: \"${CHECKSUM}\"#" Package.swift
          
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add Package.swift
          git commit -m "Update version to ${{ ENV.VERSION }}"
          git push
          
      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          body: |
            ```swift
            .binaryTarget(
              name: "MMKV",
              url: "https://github.com/devjia/mmkv-spm/releases/download/${{ env.VERSION }}/MMKV.xcframework.zip",
              checksum: "${{ env.CHECKSUM }}"
            )
            ```
          allowUpdates: true
          artifacts: "MMKV/archives/MMKV.xcframework.zip"
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ env.VERSION }}
